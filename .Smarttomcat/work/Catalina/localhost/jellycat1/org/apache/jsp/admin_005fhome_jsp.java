/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-27 10:17:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import Beans.Products;

public final class admin_005fhome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Beans.Products");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"/>\r\n");
      out.write("    <title>Shop Owner Dashboard</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        .hidden {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100\">\r\n");
      out.write("    <!-- Navbar -->\r\n");
      out.write("    <nav class=\"bg-white shadow-lg\">\r\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4\">\r\n");
      out.write("            <div class=\"flex justify-between\">\r\n");
      out.write("                <div class=\"flex space-x-4\">\r\n");
      out.write("                    <!-- Logo -->\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <a class=\"flex items-center py-5 px-2 text-gray-700\" href=\"#\">\r\n");
      out.write("                            <i class=\"fas fa-store text-2xl\"></i>\r\n");
      out.write("                            <span class=\"font-bold text-2xl ml-2\">Jellycat</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- Primary Nav -->\r\n");
      out.write("                    <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Product\" id=\"nav-products\">Products</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Order\" id=\"nav-orders\">Orders</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Customer\" id=\"nav-customers\">Customers</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Statistical\" id=\"nav-statistics\">Statistics</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Category\" id=\"nav-category\">Category</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Secondary Nav -->\r\n");
      out.write("                <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                    <form action=\"SignInUp\" method=\"post\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"action\" value=\"logout\">\r\n");
      out.write("                        <button type=\"submit\" class=\"py-2 px-3 bg-orange-500 text-white rounded-full\">Logout</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Mobile Button -->\r\n");
      out.write("                <div class=\"md:hidden flex items-center\">\r\n");
      out.write("                    <button class=\"mobile-menu-button\">\r\n");
      out.write("                        <i class=\"fas fa-bars\"></i>\r\n");
      out.write("                    </button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- Mobile Menu -->\r\n");
      out.write("    <div class=\"mobile-menu hidden md:hidden\">\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Product\" id=\"mobile-nav-products\">Products</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Order\" id=\"mobile-nav-orders\">Orders</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Customer\" id=\"mobile-nav-customers\">Customers</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Statistical\" id=\"mobile-nav-statistics\">Statistics</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Category\" id=\"mobile-nav-category\">Category</a>\r\n");
      out.write("        <form action=\"SignInUp\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"action\" value=\"logout\">\r\n");
      out.write("            <button type=\"submit\" class=\"block py-2 px-4 text-sm text-white bg-orange-500\">Logout</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Main Content -->\r\n");
      out.write("    <div class=\"max-w-7xl mx-auto px-4 py-6\" id=\"main-content\">\r\n");
      out.write("        <!-- Products Section -->\r\n");
      out.write("        <h1 class=\"text-3xl font-bold mb-6\">Products</h1>\r\n");
      out.write("\r\n");
      out.write("        ");

            String status = request.getParameter("status");
            if (status != null) {
                String message = "";
                String bgColor = "bg-green-600";
                if (status.equals("add_success")) {
                    message = "Thêm sản phẩm thành công!";
                } else if (status.equals("edit_success")) {
                    message = "Cập nhật sản phẩm thành công!";
                } else if (status.equals("error")) {
                    message = "Có lỗi xảy ra. Vui lòng thử lại.";
                    bgColor = "bg-red-600";
                }
                if (!message.isEmpty()) {
        
      out.write("\r\n");
      out.write("        <div class=\"");
      out.print( bgColor );
      out.write(" text-white p-4 rounded-lg shadow-lg mb-6 flex items-center space-x-4\">\r\n");
      out.write("            <i class=\"fas fa-");
      out.print( status.equals("error") ? "exclamation-circle" : "check-circle" );
      out.write(" text-xl\"></i>\r\n");
      out.write("            <span>");
      out.print( message );
      out.write("</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

                }
            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"flex justify-between mb-4\">\r\n");
      out.write("            <button class=\"bg-orange-500 text-white px-4 py-2 rounded\" onclick=\"addProduct()\">Thêm Sản Phẩm</button>\r\n");
      out.write("            <div class=\"relative\">\r\n");
      out.write("                <form action=\"Product\" method=\"get\">\r\n");
      out.write("                    <input type=\"text\" name=\"search\" placeholder=\"Tìm kiếm\" class=\"p-2 border border-gray-300 rounded-lg pl-10\">\r\n");
      out.write("                    <i class=\"fas fa-search absolute left-3 top-3 text-gray-400\"></i>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" id=\"product-list\">\r\n");
      out.write("            ");

                List<Products> productList = (List<Products>) request.getAttribute("productList");
                if (productList != null) {
                    for (Products product : productList) {
            
      out.write("\r\n");
      out.write("            <div class=\"bg-white p-6 rounded-lg shadow-lg\">\r\n");
      out.write("                <img alt=\"Product Image\" class=\"w-full h-80 object-cover mb-4 rounded\"\r\n");
      out.write("                     src=\"data:image/jpeg;base64,");
      out.print( java.util.Base64.getEncoder().encodeToString(product.getImage()) );
      out.write("\" />\r\n");
      out.write("                <h2 class=\"text-xl font-bold mb-2\">");
      out.print( product.getName() );
      out.write("</h2>\r\n");
      out.write("                <p class=\"text-gray-700 mb-4\">");
      out.print( product.getDescription() );
      out.write("</p>\r\n");
      out.write("                <div class=\"flex justify-between items-center\">\r\n");
      out.write("                    <span class=\"text-gray-900 font-bold\">");
      out.print( (int) product.getPrice() );
      out.write(" VND</span>\r\n");
      out.write("                    <div class=\"flex space-x-2\">\r\n");
      out.write("                        <button class=\"bg-orange-500 text-white px-3 py-1 rounded\"\r\n");
      out.write("                                onclick=\"editProduct(");
      out.print( product.getProductId() );
      out.write(")\">Sửa</button>\r\n");
      out.write("                        <button class=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n");
      out.write("                                onclick=\"deleteProduct(");
      out.print( product.getProductId() );
      out.write(")\">Xóa</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        const btn = document.querySelector(\"button.mobile-menu-button\");\r\n");
      out.write("        const menu = document.querySelector(\".mobile-menu\");\r\n");
      out.write("\r\n");
      out.write("        btn.addEventListener(\"click\", () => {\r\n");
      out.write("            menu.classList.toggle(\"hidden\");\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function addProduct() {\r\n");
      out.write("            window.location.href = 'Product?action=add';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function editProduct(productId) {\r\n");
      out.write("            window.location.href = 'Product?action=edit&productId=' + productId;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function deleteProduct(productId) {\r\n");
      out.write("            if (confirm('Bạn có chắc muốn xóa sản phẩm này không')) {\r\n");
      out.write("                window.location.href = 'Product?action=delete&productId=' + productId;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
