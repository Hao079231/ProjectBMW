/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.10
 * Generated at: 2025-05-22 15:47:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import Beans.Orders;
import Utils.DBOrder;

public final class ordersList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Utils.DBOrder");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Beans.Orders");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"/>\r\n");
      out.write("    <title>Order Dashboard</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        .hidden {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100\">\r\n");
      out.write("    <!-- Navbar -->\r\n");
      out.write("    <nav class=\"bg-white shadow-lg\">\r\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4\">\r\n");
      out.write("            <div class=\"flex justify-between\">\r\n");
      out.write("                <div class=\"flex space-x-4\">\r\n");
      out.write("                    <!-- Logo -->\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <a class=\"flex items-center py-5 px-2 text-gray-700\" href=\"#\">\r\n");
      out.write("                            <i class=\"fas fa-store text-2xl\"></i>\r\n");
      out.write("                            <span class=\"font-bold text-2xl ml-2\">Jellycat</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- Primary Nav -->\r\n");
      out.write("                    <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Product\" id=\"nav-products\">Products</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"OrderServlet\" id=\"nav-orders\">Orders</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"CustomerServlet\" id=\"nav-customers\">Customers</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Statistical\" id=\"nav-statistics\">Statistics</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Category\" id=\"nav-category\">Category</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Secondary Nav -->\r\n");
      out.write("                <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                    <a class=\"py-2 px-3 bg-orange-500 text-white rounded-full\" href=\"SignInUp\">Logout</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Mobile Button -->\r\n");
      out.write("                <div class=\"md:hidden flex items-center\">\r\n");
      out.write("                    <button class=\"mobile-menu-button\">\r\n");
      out.write("                        <i class=\"fas fa-bars\"></i>\r\n");
      out.write("                    </button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <!-- Mobile Menu -->\r\n");
      out.write("    <div class=\"mobile-menu hidden md:hidden\">\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"ProductServlet\" id=\"mobile-nav-products\">Products</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"OrderServlet\" id=\"mobile-nav-orders\">Orders</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"CustomerServlet\" id=\"mobile-nav-customers\">Customers</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Statistical\" id=\"mobile-nav-statistics\">Statistics</a>\r\n");
      out.write("        <a class=\"block py-2 px-4 text-sm\" href=\"Category\" id=\"mobile-nav-category\">Category</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Main Content -->\r\n");
      out.write("    <div class=\"max-w-7xl mx-auto px-4 py-6\" id=\"main-content\">\r\n");
      out.write("        <!-- Orders Section -->\r\n");
      out.write("        <h1 class=\"text-3xl font-bold mb-6\">Danh sách đơn hàng</h1>\r\n");
      out.write("        <div class=\"flex justify-between mb-4\">\r\n");
      out.write("            <div class=\"relative\">\r\n");
      out.write("                <form action=\"Order\" method=\"get\">\r\n");
      out.write("                    <input type=\"text\" name=\"search\" placeholder=\"Tìm kiếm\" class=\"p-2 border border-gray-300 rounded-lg pl-10\">\r\n");
      out.write("                    <i class=\"fas fa-search absolute left-3 top-3 text-gray-400\"></i>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" id=\"order-list\">\r\n");
      out.write("            <!-- Order Cards will be inserted here dynamically -->\r\n");
      out.write("            ");

                List<Orders> ordersList = (List<Orders>) request.getAttribute("ordersList"); // Lấy danh sách đơn hàng
                if (ordersList != null) {
                    for (Orders order : ordersList) { // Duyệt qua danh sách đơn hàng
            
      out.write("\r\n");
      out.write("                        <div class=\"bg-white p-6 rounded-lg shadow-lg\">\r\n");
      out.write("                            <h2 class=\"text-xl font-bold mb-2\">Mã đơn hàng: ");
      out.print( order.getOrderId() );
      out.write("</h2>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Tên khách hàng: ");
      out.print( order.getCustomerName() );
      out.write("</p>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Tổng tiền: ");
      out.print( order.getTotalAmount() );
      out.write("</p>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Trạng thái thanh toán: ");
      out.print( order.isPaymentStatus() ? "Đã thanh toán" : "Chưa thanh toán" );
      out.write("</p>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Trạng thái giao hàng: ");
      out.print( order.getDeliveryStatus() );
      out.write("</p>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Ngày tạo: ");
      out.print( order.getCreatedAt() );
      out.write("</p>\r\n");
      out.write("                            <p class=\"text-gray-700 mb-4\">Ngày cập nhật: ");
      out.print( order.getUpdatedAt() );
      out.write("</p>\r\n");
      out.write("                            <!-- Cập nhật liên kết chi tiết dz hàng -->\r\n");
      out.write("                            <a href=\"OrderDetail?orderId=");
      out.print( order.getOrderId() );
      out.write("\" class=\"bg-blue-500 text-white px-3 py-1 rounded\">Chi tiết</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        const btn = document.querySelector(\"button.mobile-menu-button\");\r\n");
      out.write("        const menu = document.querySelector(\".mobile-menu\");\r\n");
      out.write("\r\n");
      out.write("        btn.addEventListener(\"click\", () => {\r\n");
      out.write("            menu.classList.toggle(\"hidden\");\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
