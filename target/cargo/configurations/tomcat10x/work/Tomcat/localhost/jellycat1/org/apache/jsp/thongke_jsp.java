/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.10
 * Generated at: 2025-05-22 15:45:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import Beans.Statistical;
import Beans.Users;

public final class thongke_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Beans.Statistical");
    _jspx_imports_classes.add("Beans.Users");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    HttpSession sessionCheck = request.getSession(false);
    if (sessionCheck == null || sessionCheck.getAttribute("user") == null) {
        response.sendRedirect("signinup.jsp?status=login_required");
        return;
    }
    Users user = (Users) sessionCheck.getAttribute("user");
    if (!"admin".equals(user.getRole())) {
        response.sendRedirect("error.jsp?message=AccessDenied");
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" rel=\"stylesheet\"/>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\"/>\r\n");
      out.write("    <title>Thống kê đơn hàng</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-gray-100\">\r\n");
      out.write("    <!-- Navbar -->\r\n");
      out.write("    <nav class=\"bg-white shadow-lg\">\r\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4\">\r\n");
      out.write("            <div class=\"flex justify-between\">\r\n");
      out.write("                <div class=\"flex space-x-4\">\r\n");
      out.write("                    <div>\r\n");
      out.write("                        <a class=\"flex items-center py-5 px-2 text-gray-700\" href=\"#\">\r\n");
      out.write("                            <i class=\"fas fa-store text-2xl\"></i>\r\n");
      out.write("                            <span class=\"font-bold text-2xl ml-2\">Jellycat</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Product\">Products</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Order\">Orders</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Customer\">Customers</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Statistical\">Statistics</a>\r\n");
      out.write("                        <a class=\"py-5 px-3 text-gray-700\" href=\"Category\">Category</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"hidden md:flex items-center space-x-1\">\r\n");
      out.write("                    <a class=\"py-2 px-3 bg-orange-500 text-white rounded-full\" href=\"SignInUp?action=logout\">Logout</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <!-- Main Content -->\r\n");
      out.write("    <div class=\"max-w-7xl mx-auto px-4 py-6\" id=\"main-content\">\r\n");
      out.write("        <h1 class=\"text-3xl font-bold mb-6\">Thống kê đơn hàng</h1>\r\n");
      out.write("        <form method=\"post\" action=\"Statistical\" class=\"mb-6\">\r\n");
      out.write("            <div class=\"flex space-x-4\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label for=\"tuNgay\" class=\"block text-gray-700\">Từ ngày:</label>\r\n");
      out.write("                    <input type=\"date\" name=\"tuNgay\" id=\"tuNgay\" required class=\"p-2 border border-gray-300 rounded-lg\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <label for=\"denNgay\" class=\"block text-gray-700\">Đến ngày:</label>\r\n");
      out.write("                    <input type=\"date\" name=\"denNgay\" id=\"denNgay\" required class=\"p-2 border border-gray-300 rounded-lg\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <button type=\"submit\" class=\"px-6 py-2 bg-blue-500 text-white rounded-lg\">Thống kê</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("        <!-- Table for displaying orders -->\r\n");
      out.write("        <div class=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n");
      out.write("            <table class=\"min-w-full table-auto\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr class=\"bg-gray-200\">\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">ID</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Họ tên</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Địa chỉ</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Điện thoại</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Email</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Ngày đặt</th>\r\n");
      out.write("                        <th class=\"px-6 py-3 text-left text-sm font-medium text-gray-700\">Tổng tiền</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("                    ");

                        List<Statistical> danhSachThongKe = (List<Statistical>) request.getAttribute("danhSachThongKe");
                        long tongTienTatCa = 0;
                        if (danhSachThongKe != null && !danhSachThongKe.isEmpty()) {
                            for (Statistical thongKe : danhSachThongKe) {
                                tongTienTatCa += thongKe.getTongTien();
                    
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getId() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getHoTen() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getDiaChi() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getDienThoai() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getEmail() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getNgayDat() );
      out.write("</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm text-gray-700\">");
      out.print( thongKe.getTongTien() );
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    ");

                            }
                    
      out.write("\r\n");
      out.write("                    <tr class=\"bg-gray-100\">\r\n");
      out.write("                        <td colspan=\"6\" class=\"px-6 py-3 text-sm font-bold text-gray-700\">Tổng cộng</td>\r\n");
      out.write("                        <td class=\"px-6 py-3 text-sm font-bold text-gray-700\">");
      out.print( tongTienTatCa );
      out.write("</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    ");

                        } else {
                    
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td colspan=\"7\" class=\"px-6 py-3 text-sm text-gray-700 text-center\">Không có dữ liệu thống kê.</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    ");

                        }
                    
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
