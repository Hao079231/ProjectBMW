/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.10
 * Generated at: 2025-05-25 13:24:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import Beans.Message;

public final class otp_005fcode_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/components/common_css_js.jsp", Long.valueOf(1748179478026L));
    _jspx_dependants.put("/components/message.jsp", Long.valueOf(1748179478026L));
    _jspx_dependants.put("/components/navbar.jsp", Long.valueOf(1748179478027L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Beans.Message");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Bootstrap CSS -->\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Font Awesome -->\r\n");
      out.write("  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Google Fonts -->\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Custom CSS -->\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: 'Roboto', sans-serif;\r\n");
      out.write("      background-color: #f8f9fa;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .form-container {\r\n");
      out.write("      max-width: 500px;\r\n");
      out.write("      margin: 50px auto;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      border-radius: 5px;\r\n");
      out.write("      background-color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .alert {\r\n");
      out.write("      margin-bottom: 15px;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("\r\n");
      out.write("  <!-- Bootstrap JS and dependencies -->\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js\"></script>");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"ProductList\">Home</a>\r\n");
      out.write("      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("      </button>\r\n");
      out.write("      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("        <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("          <li class=\"nav-item\">\r\n");
      out.write("            <a class=\"nav-link\" href=\"signinup.jsp\">Login/Register</a>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>");
      out.write("\r\n");
      out.write("      <!DOCTYPE html>\r\n");
      out.write("      <html>\r\n");
      out.write("\r\n");
      out.write("      <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title>Xác nhận OTP</title>\r\n");
      out.write("        <!-- CSRF Token để JavaScript có thể truy cập -->\r\n");
      out.write("        <meta name=\"csrf-token\" content=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.csrfToken}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("        <!-- Nhúng script bảo vệ CSRF -->\r\n");
      out.write("        <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/csrf-protection.js\"></script>\r\n");
      out.write("        <style>\r\n");
      out.write("          .form-container {\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          .alert {\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          .otp-input {\r\n");
      out.write("            letter-spacing: 2px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("          }\r\n");
      out.write("        </style>\r\n");
      out.write("      </head>\r\n");
      out.write("\r\n");
      out.write("      <body>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("          <div class=\"form-container\">\r\n");
      out.write("            <div class=\"card\">\r\n");
      out.write("              <div class=\"card-header text-center\">\r\n");
      out.write("                <h3>Nhập mã OTP</h3>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"card-body\">\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("    ");
 Message msg=(Message)session.getAttribute("message"); if(msg !=null) { 
      out.write("\r\n");
      out.write("      <div class=\"alert ");
      out.print( msg.getCssClass() );
      out.write(" alert-dismissible fade show\" role=\"alert\">\r\n");
      out.write("        ");
      out.print( msg.getContent() );
      out.write("\r\n");
      out.write("          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("      ");
 session.removeAttribute("message"); } 
      out.write("\r\n");
      out.write("                  <form action=\"ChangePasswordServlet\" method=\"post\" class=\"needs-validation\" novalidate\r\n");
      out.write("                    data-no-csrf=\"true\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"csrfToken\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.csrfToken}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    <div class=\"form-group mb-3\">\r\n");
      out.write("                      <label for=\"code\" class=\"form-label\">Mã OTP:</label>\r\n");
      out.write("                      <input type=\"text\" class=\"form-control otp-input\" id=\"code\" name=\"code\" required minlength=\"5\"\r\n");
      out.write("                        maxlength=\"5\" pattern=\"[0-9]{5}\" placeholder=\"Nhập mã 5 số\">\r\n");
      out.write("                      <div class=\"invalid-feedback\">\r\n");
      out.write("                        Vui lòng nhập mã OTP 5 số.\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <small class=\"form-text text-muted\">Nhập mã OTP đã được gửi đến email của bạn.</small>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"d-grid gap-2\">\r\n");
      out.write("                      <button type=\"submit\" class=\"btn btn-primary\">Xác nhận</button>\r\n");
      out.write("                      <a href=\"forgot_password.jsp\" class=\"btn btn-outline-primary\">Quay lại</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </form>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("          // Form validation\r\n");
      out.write("          (function () {\r\n");
      out.write("            'use strict'\r\n");
      out.write("            var forms = document.querySelectorAll('.needs-validation')\r\n");
      out.write("            Array.prototype.slice.call(forms)\r\n");
      out.write("              .forEach(function (form) {\r\n");
      out.write("                form.addEventListener('submit', function (event) {\r\n");
      out.write("                  if (!form.checkValidity()) {\r\n");
      out.write("                    event.preventDefault()\r\n");
      out.write("                    event.stopPropagation()\r\n");
      out.write("                  }\r\n");
      out.write("                  form.classList.add('was-validated')\r\n");
      out.write("                }, false)\r\n");
      out.write("              })\r\n");
      out.write("          })()\r\n");
      out.write("\r\n");
      out.write("          // Auto format OTP input\r\n");
      out.write("          document.getElementById('code').addEventListener('input', function (e) {\r\n");
      out.write("            this.value = this.value.replace(/[^0-9]/g, '');\r\n");
      out.write("          });\r\n");
      out.write("        </script>\r\n");
      out.write("      </body>\r\n");
      out.write("\r\n");
      out.write("      </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
